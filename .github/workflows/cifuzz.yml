# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "vasttest" ]
  pull_request:
    branches: [ "vasttest" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: cifuzz/builders:vast

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Build fuzzers
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
        run: |
          cifuzz bundle -v --build-jobs=$(nproc) --docker-image=cifuzz/builders:vast --timeout=5m --commit=$GITHUB_SHA --branch=$GITHUB_REF_NAME -- -DVAST_ENABLE_CIFUZZ=ON
      - name: Upload fuzzer
        id: start-fuzzing
        env:
          BEARER_TOKEN: ${{secrets.CI_FUZZ_API_TOKEN_2}}
        run: |
          FUZZING_SERVER=oss-fuzzing-service.westeurope.cloudapp.azure.com:443
          CI_FUZZ_API_TOKEN=${{ secrets.CI_FUZZ_API_TOKEN_2 }}
          PROJECT=projects/vast-1414649d
          WEB_APP_ADDRESS=https://oss-fuzzing-service.westeurope.cloudapp.azure.com
          TIMEOUT=5

          echo "FUZZING_SERVER is ${FUZZING_SERVER}"
          echo "PROJECT is ${PROJECT}"
          echo "WEB_APP_ADDRESS is ${WEB_APP_ADDRESS}"
          echo "TIMEOUT is ${TIMEOUT}"

          echo "Current folder:"
          pwd

          CICTL_CMD="cictl --server ${FUZZING_SERVER}"
          echo "${CI_FUZZ_API_TOKEN}" | $CICTL_CMD login --quiet
          ARTIFACT_NAME=$($CICTL_CMD import artifact fuzz_tests.tar.gz --project-name "${PROJECT}")
          CAMPAIGN_RUN_NAME=$($CICTL_CMD start "${ARTIFACT_NAME}")
          echo "ARTIFACT NAME: ${ARTIFACT_NAME}"
          echo "CAMPAIGN RUN: ${CAMPAIGN_RUN_NAME}"
          $CICTL_CMD monitor_campaign_run --dashboard_address="${WEB_APP_ADDRESS}" --duration="${TIMEOUT}" ${CAMPAIGN_RUN_NAME}
          echo "::set-output name=test_collection_run::${CAMPAIGN_RUN_NAME}"
      - name: Save Fuzz Test Results
        uses: CodeIntelligenceTesting/github-actions/save-results@v3
        if: ${{ success() || failure() }}
        with:
          ci_fuzz_api_token: ${{secrets.CI_FUZZ_API_TOKEN_2}}
          test_collection_run: ${{ steps.start-fuzzing.outputs.test_collection_run }}
          fuzzing_server_address: oss-fuzzing-service.westeurope.cloudapp.azure.com:443
          dashboard_address: https://oss-fuzzing-service.westeurope.cloudapp.azure.com/

      - id: upload-artifact
        uses: actions/upload-artifact@v2
        if: ${{ (success() || failure()) }}
        with:
          name: ci_fuzz_results
          path: | 
            findings.json
            coverage.json
            web_app_address.txt
